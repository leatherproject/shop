/*
Основные тонкости позиционирования с left и translateX:

Замечания по поводу .menu__link {}, .menu__mark {}, .menu__mark--order {}, .menu__mark--new {}
в файлах layout.css, fscr-layout.css - разное отображение в браузерах.

Причины различий в смещении бейджиков .menu__mark в Chrome и Firefox кроются в деталях 
рендеринга и вычисления размеров браузерами:

1. Вычисление transform: translateX(%)
  - translateX(28%) зависит от ширины элемента, к которому применяется трансформация (.menu__mark).
  - Проценты в translateX (%) считаются от собственных размеров элемента, что может давать разницу между браузерами
  - Поскольку .menu__mark имеет width: 85%, а родительский элемент (ссылка a) может по-разному обрабатываться 
  в Chrome и Firefox (особенно inline поведение), итоговая ширина может отличаться в 1–2 пикселя.

2. Влияние шрифта и рендеринга текста
  - Шрифты могут визуально рендериться по-разному: Firefox и Chrome используют разные движки (Gecko и Blink).
  - Даже если font-size одинаковый, реальный "box" текста может слегка отличаться.

3. Наследование/контекстная ширина у a.menu__link
  - Элемент a по умолчанию inline, и если он не задан как inline-block или block, его размеры считаются только по содержимому.
  Firefox и Chrome по-разному трактуют размеры inline-элементов с вложенными абсолютными элементами.

4. Rounded subpixel differences
  - transform, position и другие параметры могут учитывать доли пикселя, которые Chrome и Firefox округляют по-разному, 
  особенно на экранах с devicePixelRatio > 1.

Решение:
- Явно задать родителю (например, ссылке) position: relative и display: inline-block или block.
- Проверить line-height и vertical-align, особенно у родителя и span.
- Использовать flexbox/grid внутри a, если нужно точное выравнивание
- Избегать процентов в translateX, если нужна пиксельная точность.

Центрирование:
 - Для точного центрирования часто используют вместе
   left: 50%; transform: translateX(-50%); с фиксированным или авто размером.
 - элемент смещается на 50% родителя(!) и сдвигается назад на половину своей(!) ширины. 

Если ширина элемента указана - то

 left: 50%; transform: translateX(-50%);

 то же что и 

 left: 0; right: 0; margin: auto;

Разница:
1. Что делают:
 - left/right: смещают элемент относительно позиционированного родителя, влияют на layout.
 - transform: translate(): визуально смещают элемент, не влияют на layout.

2. Влияние на соседние элементы:
 - left/right: могут менять расположение других элементов.
 - translate(): не влияют на соседей.

3. Проценты считаются от:
 - left/right: от размеров родителя.
 - translateX/Y(%): от размеров самого элемента.

4. Использование для центрирования:
 - left: 50%: сдвигает элемент к центру родителя.
 - translateX(-50%): сдвигает элемент назад на половину его ширины.

5. Производительность:
 - left/right: меняют layout, могут вызывать перерасчёт и перерисовку.
 - translate(): переход (трансформация) происходит на уровне рендеринга,  GPU-ускорено, 
 не вызывает перерасчёта layout, лучше для анимаций.

6. Тип позиционирования:
 - left/right: работают с абсолютным/относительным позиционированием.
 - translate(): применяется к визуальному отображению независимо от позиционирования.

7. 

*/

